#!/usr/bin/env python
# -*- coding: utf-8 -*-

# add or remove an environment variable

from __future__ import print_function

import sys
from os import path
import argparse


fname = path.expanduser(path.join('~', '.envvars'))

parser = argparse.ArgumentParser(description='A CLI to manage custom environment variables.')
parser.add_argument('-d', action='store_true', dest='rm', help='a flag to indicate that the key should be deleted')
parser.add_argument('key', help='the name of the variable')
parser.add_argument('value', nargs='?', help='the value of the variable; optional if deleting')
args = parser.parse_args()

with open(fname, 'r+') as fin:
    envvars = dict([l.strip()[7:].split('=') for l in fin.readlines()])

if not args.rm:
    if args.value is None:
        print('The argument [value] is required when adding a env var.')
        sys.exit(1)
    if args.key in envvars:
        print('Overwriting old value \'{}\'.'.format(envvars[args.key]))
    envvars[args.key] = args.value
else:
    if args.key not in envvars:
        print('That env var does not exist.')
        sys.exit(1)
    del envvars[args.key]

envvars = sorted(envvars.items())

with open(fname, 'w') as fout:
    fout.write('\n'.join(['export {}={}'.format(k, v) for k, v in envvars]))

print('Restart the shell for changes to take effect.')
