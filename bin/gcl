#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# git clone a project

import os
import re
import sys
import argparse
import subprocess

from termcolor import colored

from common import run_command, RpclIOManager


PATH_REGEX = r'git@github\.com:(?P<org>[^/]*)/(?P<repo>[^/]*)\.git'
PATH_FMT = 'git@github{suff}:{org}/{repo}.git'
IGNORED_ORGS = {'PlentyAg'}


def main():
    """The main function."""
    parser = argparse.ArgumentParser(description='A CLI to clone a project.')
    parser.add_argument('path', help='the full ssh path of the repo')
    RpclIOManager(parser)
    args = parser.parse_args()
    path = args.path

    match = re.fullmatch(PATH_REGEX, path)
    if match is None:
        print(colored(f'Invalid path \'{path}\'.', 'red'))

    fields = match.groupdict()
    org, repo = match['org'], match['repo']

    personal = org not in IGNORED_ORGS
    suff = '-personal' if personal else '.com'

    if os.path.exists(repo):
        print(colored(f'Destination file \'{repo}\' already exists.', 'red'))
        exit('.')

    path = PATH_FMT.format(suff=suff, org=org, repo=repo)
    run_command('git clone ' + path, verbose=True)

    if personal:
        run_command(f'git --git-dir {repo}/.git config user.email zdfs1121@gmail.com')

    exit(repo)


if __name__ == '__main__':
    main()
